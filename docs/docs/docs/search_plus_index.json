{"./":{"url":"./","title":"Introduction","keywords":"","body":"LGR算法整理 本文档使用 Gitbook 制作 链接：https://44825762.github.io/Gitbook_public/ 贡献者 LGR - https://github.com/44825762 本文档不可用作商用，仅用作个人笔记整理 Copyright © GUORONG LI 2020 all right reserved，powered by Gitbook该文件修订时间： 2021-05-03 23:16:02 "},"SLAM/SLAM_1.html":{"url":"SLAM/SLAM_1.html","title":"SLAM","keywords":"","body":"SLAM - simultaneous localization and mapping 同时定位与建图 名词解释 FOV - 视场角 在光学仪器中，以光学仪器的镜头为顶点，以被测目标的物像可通过镜头的最大范围的两条边缘构成的夹角，称为视场角。如图一。 视场角的大小决定了光学仪器的视野范围，视场角越大，视野就越大，光学倍率就越小。通俗地说，目标物体超过这个角就不会被收在镜头里。 在显示系统中，视场角就是显示器边缘与观察点（眼睛）连线的夹角。 例如在图二中，AOB角就是水平视场角，BOC就是垂直视场角。 SLAM 大体框架 SLAM 是卷积神经网络和深度学习的补充：SLAM 关注于几何问题而深度学习是感知、识别问题的大师。 SLAM是simultaneous localization and mapping的简写，中文直译为同时定位与建图，其中又以定位更为核心，建图实际上是在定位的基础上，将观测数据进行融合的过程。 SLAM涵盖的东西比较多，分为前端和后端两大块。 前端主要是研究相邻帧的拼接，又叫配准。根据传感器不一样，有激光点云、图像、RGB-D拼接几种，其中图像配准中又分基于稀疏特征(Sparse)的和稠密(Dense)的两种。 后端主要是研究地图拼接(前端)中累积误差的校正。 主流就两种，基于概率学理论的贝叶斯滤波器（EKF，PF）以及基于优化的方法。EKF已经用得很少了，PF也就在2D地图SLAM（Gmapping）中用得多，大多还是用优化的方法在做。 关于定位，我们或许听过很多相关的术语，GPS（全球定位系统），基站定位，WIFI定位，陀螺仪等等；但以上定位方案无论是适用场景，还是精度，抑或是价格，对于常见的SLAM应用都不能满足需求，因此需要寻求更好的定位解决方案。 定位本质上可以定义为一个估计问题，通过传感器的观测数据（存在不同程度的噪声）来估计位置；也可以定义为一个优化问题，通过多种观测数据之间的约束关系，对位置进行优化。逻辑上，噪声越低的传感器能够获得更好的定位精度，但需要在价格和精度上寻求balance； 对于定位，通常意义上我们都指绝对定位，比如我们的GPS，固定原点位置，所有的定位都以这个原点作为参考，并以经纬度表示；又比如建筑物内部，我们规定一个原点，其他的定位结果都已这个位置为参考，并加上度量衡（cm, m等）表示。另外，在SLAM中我们也考虑相对定位（或者称为相对位移），当前时刻相对于前一时刻的旋转、平移量是多少，并且可以通过时序的累积得到绝对定位。 目前行业中使用的传感器有： 激光雷达（单线、多线，能够获得对应点的深度信息）- 角分辨率及精度也各有千秋 深度摄像头（TOF，结构光，双目；三种方案各有优缺点，能够获取彩色和深度图像） IMU（惯导单元，能够获得高频的位移信号） 彩色摄像头（单目，鱼眼，或者是经过特殊的设计获得更大的FOV） 码盘（记录累积里程，累积误差大） 参考1参考2 传感器 - 主要用于获取深度信息 结构光 和 TOF SLAM 算法 SLAM 算法框架 SLAM 目前可能存在的一些问题 发展方向： 多传感器融合 优化数据关联与回环检测 与前端异构处理器集成 提升鲁棒性重定位精度 阻力： Sensor精度不高 计算量大 Sensor应用场景不具有普适性 SLAM 案例 1. 激光雷达定位 2. 视觉SLAM - 以ORB_SLAM为例 深度学习SLAM 详细深度学习相关算法在参考1，2中 参考1参考2参考3 思考与问题 能否通过做预训练模型达到更高效的SLAM结果。 SLAM 和 语义分割 结合，用语义分割，语义建图辅助定位。以达到更高的定位准确度。 SLAM和强化学习结合，优化部分SLAM，比如优化RANSAC过程。 问题与思考 部门目前SLAM的应用是什么样的，要达到什么样的目的和效果 部门目前做的SLAM 需要达到哪些指标。指标指的是，我们的SLAM模型需要做到什么程度，比如运行时间，空间等。 跟着第2个问题，部门目前的SLAM方案中，传感器融合是融合的哪几个。 点云在部门业务中的应用是怎么样的。 深度学习中的混合模型已经在许多任务中达到了最新水平，例如视觉里程计和全局定位。部门目前这一块是什么情况。没有使用混合模型是出于什么考虑。 Copyright © GUORONG LI 2020 all right reserved，powered by Gitbook该文件修订时间： 2021-05-04 14:26:26 "},"Face_RC/FC_1.html":{"url":"Face_RC/FC_1.html","title":"人脸重建","keywords":"","body":"人脸重建 什么是人脸重建 目前获取人脸三维模型的方法主要包括三种，软件建模，仪器采集与基于图像的建模。 软件建模 - 3DMax 三维成像仪器 - 基于结构光和激光仪器的三维成像仪是其中的典型代表。 基于仪器采集的三维模型，精度可达毫米级，是物体的真实三维数据。 用来为基于图像的建模方法提供评价数据库。不过仪器的成本太高。 基于图像的建模技术（image based modeling） 是指通过若干幅二维图像，来恢复图像或场景的三维结构。 3DMM 方法 参考 1参考 2 剩余部分模型描述，参见 参考 2 深度学习 3DMM重建 全监督方法 Regressing Robust and Discriminative 3D Morphable Models with a very Deep Neural Network 3DMM CNN 3DMM CNN是一个非常简单的回归模型，它使用了ResNet101网络直接回归出3DMM的形状系数和纹理系数，形状系数和纹理系数各有99维 数据获取 - 用CASIA WebFace数据集中的多张照片进行model fitting求解生成了对应的三维人脸模型，将其作为真值(Ground Truth)，从而得到了二维三维图像对。 优化目标的设计 - 用标准的欧拉损失函数来最小化距离，会使得到的人脸模型太泛化，趋于平均脸。对此作者们提出了一个非对称欧拉损失，使模型学习到更多的细节特征，使三维人脸模型具有更多的区别性。 公式见 参考 1 自监督方法 这一类方法不依赖于真实的成对数据集，它将二维图像重建到三维，再反投影回二维图 MoFa 输入首先经过一个Deep Encoder提取到语义相关的系数，系数包含了人脸姿态，形状，表情，皮肤，场景光照等信息。 然后将该系数输入基于模型的decoder，实现三维模型到二维图像的投影，模型可以使用3DMM模型。 最后的损失是基于重建的图像和输入图像的像素损失。 还可以添加关键点损失，系数正则化损失作为约束。 人脸的三维特征编码 基于3DMM模型将三维人脸进行更好的特征编码 3DDFA - Face Alignment Across Large Poses: A 3D Solution 使用Projected Normalized Coordinate Code(简称PNCC)作为预测特征 模型详细见 参考 1 使用3DDFA拟合之后，抽取HOG特征作为输入，使用线性回归来进一步提升2D特征点的定位精度。 PRNet - Joint 3D Face Reconstruction and Dense Alignment with Position Map Regression Network 利用UV位置图(UV position map)来描述3D形状。 用CNN网络直接预测UV位置图，如此，采用一个编解码结构即可。 作者们为了更好的预测坐标，或者说为了使预测出来的结果更有意义，计算损失函数时对不同区域的顶点误差进行加权。不同区域包括特征点，鼻子眼睛嘴巴区域，人脸其他部分，脖子共四个区域。它们的权重比例为16:4:3:0，可见特征点最重要，脖子不参与计算。 3DMM 展望 Copyright © GUORONG LI 2020 all right reserved，powered by Gitbook该文件修订时间： 2021-05-04 23:16:33 "},"Camera/Camera.html":{"url":"Camera/Camera.html","title":"物料篇","keywords":"","body":"物料篇 现代Camera 硬件原理 CCD 与 CMOS 单目相机成像原理 成像基于小孔成像模型，关于小孔成像模型 在成像方式上，比较常见的有CCD（电荷耦合器件，Charge Coupled Device)和CMOS（Complementary Metal-Oxide-Semiconductor，互补金属氧化物半导体)两种方式 在接受光照之后，感光元件产生对应的电流，电流大小与光强对应，因此感光元件直接输出的电信号是模拟的。在CCD传感器中，每一个感光元件都不对此作进一步的处理，而是将它直接输出到下一个感光元件的存储单元，结合该元件生成的模拟信号后再输出给第三个感光元件，依次类推，直到结合最后一个感光元件的信号才能形成统一的输出。 由于感光元件生成的电信号实在太微弱了，无法直接进行模数转换工作，因此这些输出数据必须做统一的放大处理。这项任务是由CCD传感器中的放大器专门负责，经放大器处理之后，每个像点的电信号强度都获得同样幅度的增大。但由于CCD本身无法将模拟信号直接转换为数字信号，因此还需要一个专门的模数转换芯片进行处理，最终以二进制数字图像矩阵的形式输出给专门的中央控制器处理芯片。 相比而言CMOS传感器中每一个感光元件都直接整合了放大器和模数转换逻辑（ADC），当感光二极管接受光照、产生模拟的电信号之后，电信号首先被该感光元件中的放大器放大，然后直接转换成对应的数字信号。 CCD和CMOS的工作原理有一个共通点，那就是都是用光敏二极管来作为光-电信号的转化元件。它们每个感光元件的像素点分别对应图像传感器中的一个像点，由于感光元件只能感应光的强度，无法捕获色彩信息，因此彩色CCD/CMOS图像传感器必须在感光元件上方覆盖彩色滤光片。在这方面，不同的传感器厂商有不同的解决方案，最常用的做法是覆盖RGB红绿蓝三色滤光片，以1：2：1的构成由四个像点构成一个彩色像素（即红蓝滤光片分别覆盖一个像点，剩下的两个像点都覆盖绿色滤光片），这种解决方案就是大名鼎鼎的贝尔滤镜。采用贝尔插值可以分别获得RGB三个分量的灰度信息。 双目相机 - 具体原理见后 -> 相机成像模型 深度相机 - 见后 -> 相机成像模型 相机成像模型 畸变矫正公式 参考1 畸变矫正公式 参考2 参考 参考 1参考 2参考 3参考 4参考 5参考 6重要参考 Copyright © GUORONG LI 2020 all right reserved，powered by Gitbook该文件修订时间： 2021-05-05 13:54:49 "},"SLAM/":{"url":"SLAM/","title":"体悟及问题","keywords":"","body":"体悟 总的看下来，对这三块有了基本的认识，感觉这三块其实是一个大块。可以理解为，SLAM是人脸重建，三维重建的在线形式吧。 SLAM是同时定位与制图，人脸重建是三维重建的一部分，三维重建是制图的一部分，同时三维重建也要用到定位信息，这两者本就是考虑同样的问题。 这里面不同的可能就是SLAM和人脸重建考虑的侧重点不同。SLAM 建图部分没有刻意去重建某个特定的目标，只是重建一个整体的轮廓。但要求运行速度块，通常是实时系统。总结就是速度大于精度，所以SLAM体现在方法上是在关键帧之间做BA，非关键帧一般使用filter处理。 人脸三维重建功能和SLAM是挺像的，他的目的也是求相机的姿态，最后也可以得到稀疏的3D点。他和SLAM的不同就是，人脸重建要求的精度更高，所以体现在方法上， 能做BA的地方就做BA。 发展方向上看，SLAM是朝着轻量级方向走的，人脸重建是往大规模，动态化方向上走的，大规模数据集的训练。 深度估计是3D重建很重要的一块，个人认为由深度估计的意义就是先得到深度图，从而使3D重建中的很多问题简单化。主要的用途就是3D建模，场景理解，深度感知，等等的图像合成问题。在SLAM和人脸重建问题中，深度估计是这两个东西的前置步骤吧，至少在这两个的某些方法中，深度估计是前置步骤。 不管是使用激光设备也好，结构光也好，最终的目的还是要得到物体或者环境的深度信息，深度图，以用于SLAM的定位，建图以及人脸重建的直接信息输入。 Copyright © GUORONG LI 2020 all right reserved，powered by Gitbook该文件修订时间： 2021-05-05 00:17:34 "},"SLAM/3D_Reconstruction.html":{"url":"SLAM/3D_Reconstruction.html","title":"3D","keywords":"","body":"3D 重建 深度学习方法 参考 3D 重建 传统方法 论文阅读 KinectFusion论文阅读 补充 Github 的一个实现 - Kintinuous Bundle Fusion 论文阅读 官网论文代码算法解读 https://blog.csdn.net/fuxingyin/article/details/52921958 https://blog.csdn.net/cc13949459188/article/details/103614402 http://www.cxyzjd.com/article/qq_41318333/109672102http://www.cxyzjd.com/article/weixin_38636815/107295092http://www.cxyzjd.com/article/weixin_38636815/107838359http://www.cxyzjd.com/article/weixin_38636815/107694846http://www.cxyzjd.com/article/u014660846/108438052http://www.cxyzjd.com/article/fuxingyin/52921958 https://zhuanlan.zhihu.com/p/86718461 InfiniTAM 论文阅读 InfiniTAM提供Linux，iOS，Android平台版本，CPU可以实时重建。官网 GitHub代码 ElasticReconstruction 论文阅读 项目官网 GitHub代码 Copyright © GUORONG LI 2020 all right reserved，powered by Gitbook该文件修订时间： 2021-05-20 23:20:58 "}}